<?xml version="1.0" encoding="iso-8859-1" ?>
<!-- $Id$ -->
<project basedir="../.." default="dist" name="dist">
    
  <description>Create eXist-db distribution</description>
    
    <!-- import common targets -->
    <import file="../../build.xml"/>
    <import file="git-support.xml"/>

    <!-- temorary location for files that should be added to the war -->
    <property name="war.tmp" value="webapp/WEB-INF/tmp"/>
    <!-- temporary location for libs that should be added to the war -->
    <property name="war.tmp.libs" value="${war.tmp}/lib"/>

    <!-- ================================================================== -->
    <!-- Prepare webapp                                                     -->
    <!-- ================================================================== -->
    <target name="webapps">
    
        <mkdir dir="dist"/>
        
        <!-- When there are no java docs, create empty file -->
        <mkdir dir="webapp/api"/>
        <touch file="webapp/api/index.html"/>

        <mkdir dir="webapp/WEB-INF/data"/>
        <mkdir dir="webapp/WEB-INF/loggerdir"/>
        <mkdir dir="webapp/WEB-INF/logs"/>

        <!-- create war specific configuration files -->
        <xslt in="conf.xml"  out="webapp/WEB-INF/conf.xml"  style="${build.scripts}/dist-war-conf.xsl" classpathref="classpath.core">
            <factory name="net.sf.saxon.TransformerFactoryImpl"/>
            <classpath>
                <fileset dir="lib/endorsed">
                    <include name="Saxon*.jar"/>
                </fileset>
            </classpath>
        </xslt>
        <xslt in="log4j2.xml" out="webapp/WEB-INF/log4j2.xml" style="${build.scripts}/dist-war-log4j.xsl" classpathref="classpath.core">
        <factory name="net.sf.saxon.TransformerFactoryImpl"/>
            <classpath>
                <fileset dir="lib/endorsed">
                    <include name="Saxon*.jar"/>
                </fileset>
            </classpath>
        </xslt>
        
        <!-- fetch war specific libs -->
        <path id="log4j2.core.path">
            <fileset dir="${lib.core}">
                <include name="log4j-core-*.jar"/>
            </fileset>
        </path>
        <property name="log4j2.core.file" refid="log4j2.core.path"/>
        <propertyregex property="log4j2.version" input="${log4j2.core.file}" regexp=".*log4j-core-(.*).jar" select="\1" />

        <echo message="Detected log4j2 version: ${log4j2.version}, downloading log4j-web-${log4j2.version}.jar..."/>

        <property name="log4j2.web.artifact" value="log4j-web-${log4j2.version}.jar"/>
        <property name="log4j2.web.url" value="http://search.maven.org/remotecontent?filepath=org/apache/logging/log4j/log4j-web/${log4j2.version}/${log4j2.web.artifact}"/>

        <mkdir dir="${war.tmp.libs}"/>
        <get src="${log4j2.web.url}" dest="${war.tmp.libs}/${log4j2.web.artifact}" verbose="true" usetimestamp="true" skipexisting="true" tryGzipEncoding="true"/>
    </target>

    <!-- ================================================================== -->
    <!-- Create .war file                                                   -->
    <!-- ================================================================== -->
    <target name="dist-war" depends="git.details,webapps" description="Create war file">

      <war destfile="${dist}/exist-${project.version}${build.label}.war" webxml="webapp/WEB-INF/web.xml">
                
            <!-- Add files to WEB-INF/lib -->
            <lib dir=".">
                <include name="start.jar"/>
                <include name="exist.jar"/>
                <include name="exist-optional.jar"/>
                <include name="exist-modules.jar"/>
            </lib>
            <lib dir="${lib.core}">
                <include name="*.jar"/>
            </lib>
            <lib dir="${lib.extensions}">
                <include name="*.jar"/>
            </lib>
            <lib dir="${lib.optional}">
                <include name="*.jar"/>
                <exclude name="servlet-api-*.jar"/>
                <exclude name="jsp-api-*.jar"/>
            </lib>
            <lib dir="${lib.user}">
                <include name="*.jar"/>
            </lib>
            <!-- The following jars should not be here, but in 'endorsed' -->
            <lib dir="${lib.endorsed}">
                <include name="*.jar"/>
            </lib>
            <!-- Include lucene jar, needed for documentation search -->
            <lib dir="extensions/indexes/lucene/lib">
                <include name="*.jar"/>
            </lib>
            <!-- Include spatial jars, when available -->
            <lib dir="extensions/indexes/spatial/lib" erroronmissingdir="false">
                <include name="*.jar"/>
            </lib>
            <!-- Include xqdoc jar, needed for xquery function documentation -->
            <lib dir="extensions/xqdoc/lib">
                <include name="*.jar"/>
            </lib>
           
            <!-- Include webdav milton jars  -->
            <lib dir="extensions/webdav/lib">
                <include name="*.jar"/>
            </lib>
            <!-- Include betterform jars  -->
            <lib dir="extensions/betterform/main/lib">
                <include name="*.jar"/>
            </lib>
            <!-- Include the AspectJ runtime jar -->
            <lib dir="${tools.aspectj}/lib">
                <include name="aspectjrt-*.jar"/>
            </lib>

            <!-- Include expath jars  -->
            <lib dir="extensions/expath/lib">
                <include name="*.jar"/>
            </lib>
            <!-- Include exquery jars  -->
            <lib dir="extensions/exquery/lib">
                <include name="*.jar"/>
            </lib>
            <!-- RestXQ-->
            <lib dir="extensions/exquery/restxq/lib">
                <include name="*.jar"/>
            </lib>
            <!-- Include extension modules jars  -->
            <lib dir="extensions/modules/lib">
                <include name="*.jar"/>
            </lib>
            <lib dir="${war.tmp.libs}">
              <include name="*.jar"/>
            </lib>

            <!-- Include content extraction jars -->
            <lib dir="extensions/contentextraction/lib">
              <include name="*.jar"/>
            </lib>

            <!-- Add configuration files to WEB-INF -->
            <webinf dir=".">
                <include name="client.properties"/>
                <include name="backup.properties"/>
                <include name="controller-config.xml"/>
                <include name="server.xml"/>
                <include name="mime-types.xml"/>
                <include name="descriptor.xml"/>
                <include name="atom-services.xml"/>
            </webinf>
            
            <!-- Add autodeploy directory to war WEB-INF -->
            <webinf dir="." includes="autodeploy/*"/>
            
            <!-- Add files context root ('/') -->
            <fileset dir="webapp">
                <exclude name="**/*~"/>
                <exclude name="WEB-INF/tmp/**"/>
                <exclude name="api/**"/>
                <exclude name="WEB-INF/web.xml"/>
                <exclude name="WEB-INF/data/*.dbx"/>
                <exclude name="WEB-INF/data/*.lck"/>
                <exclude name="WEB-INF/data/lucene/**"/>
                <exclude name="WEB-INF/data/fs/**"/>
                <exclude name="WEB-INF/data/fs.journal/**"/>
                <exclude name="WEB-INF/data/export/**"/>
                <exclude name="WEB-INF/data/sanity/**"/>
                <exclude name="WEB-INF/data/expathrepo/**"/>
                <exclude name="**/*.log*"/>
            </fileset>

            <zipfileset dir="samples" prefix="samples">
                <include name="**"/>
                <exclude name="**/*~"/>
                <exclude name="xupdate/**"/>
                <exclude name="test.xml"/>
                <exclude name="**/.*"/>
            </zipfileset>
            
            <!-- Not needed for war file -->
            <!-- <fileset dir=".">
            <include name="start.jar"/>
            <include name="examples.jar"/>
            </fileset> -->
            
            <!-- Add additional information -->
            <manifest>
                <attribute name="Implementation-Title" value="${project.name} Core"/>
                <attribute name="Implementation-Version" value="${project.version}"/>
                <attribute name="Implementation-Vendor" value="The eXist Project"/>
                <attribute name="Implementation-Vendor-Id" value="org.exist-db"/>
                <attribute name="Implementation-URL" value="https://github.com/exist-db/exist"/>

                <attribute name="Specification-Title" value="${project.name} Core"/>
                <attribute name="Specification-Version" value="${project.version}"/>
                <attribute name="Specification-Vendor" value="The eXist Project"/>

                <attribute name="Source-Repository" value="scm:git:https://github.com/exist-db/exist.git"/>
                <attribute name="Git-Commit" value="${git.revision.full}"/>
                <attribute name="Git-Commit-Abbrev" value="${git.revision}"/>
                <attribute name="Build-Tag" value="${git.branch.full}"/>
                <attribute name="Build-Timestamp" value="${DSTAMP}${TSTAMP}"/>
                <attribute name="Built-By" value="${user.name}"/>
                <attribute name="Build-Jdk" value="${java.version}"/>

                <attribute name="Description" value="eXist XML Native Database"/>
                <attribute name="Created-By" value="${ant.version}"/>
            </manifest>

        </war>
        <delete dir="${war.tmp}"/>
    </target>

    <target name="clean-dist" depends="git.details">
        <property name="dist.dir" value="${dist}/${project.name}-${project.version}${build.label}"/>
        <delete dir="${dist.dir}"/>
    </target>

    <!-- ================================================================== -->
    <!-- Prepare dist                                                       -->
    <!-- ================================================================== -->
    <target name="dist" depends="clean-dist,all,dist-dir"/>

    <target name="dist-dir" depends="git.details">
        <property name="dist.dir" value="${dist}/${project.name}-${project.version}${build.label}"/>

        <copy todir="${dist.dir}">
            <fileset dir=".">
                <include name="LICENSE"/>
                <include name="README"/>
                <include name="README.md"/>
                <include name="CONTRIBUTING.md"/>
                <include name="*.bat"/>
                <include name="*.sh"/>
                <include name="conf.xml"/>
                <include name="*.tmpl"/>
                <include name="server.xml"/>
                <include name="descriptor.xml"/>
                <include name="build.xml"/>
                <include name="log4j2.xml"/>
                <include name="*.properties"/>
                <include name="exist.jar"/>
                <include name="exist-optional.jar"/>
                <include name="examples.jar"/>
                <include name="start.jar"/>
                <include name="exist-modules.jar"/>
                <include name="exist-testkit.jar"/>
            </fileset>
        </copy>

        <copy todir="${dist.dir}/autodeploy">
            <fileset dir="autodeploy"/>
        </copy>
        <copy todir="${dist.dir}/bin">
            <fileset dir="bin"/>
        </copy>
        <copy todir="${dist.dir}/src">
            <fileset dir="src"/>
        </copy>
        <copy todir="${dist.dir}/test/src">
            <fileset dir="test/src"/>
        </copy>
        <copy todir="${dist.dir}/lib">
            <fileset dir="lib"/>
        </copy>

        <copy todir="${dist.dir}/build/scripts">
            <fileset dir="${build.scripts}"/>
        </copy>

        <copy todir="${dist.dir}/tools">
            <fileset dir="tools">
                <exclude name="**/work/**/*"/>
                <exclude name="**/logs/*"/>
                <exclude name="**/tmp/*"/>
            </fileset>
        </copy>

        <copy todir="${dist.dir}/webapp">
            <fileset dir="webapp">
                <exclude name="api/"/>
                <exclude name="xqts/"/>
                <exclude name="WEB-INF/"/>
            </fileset>
        </copy>

        <copy todir="${dist.dir}/webapp/WEB-INF">
            <fileset dir="webapp/WEB-INF">
                <exclude name="classes/"/>
                <exclude name="data/"/>
                <exclude name="logs/"/>
                <exclude name="loggerdir/"/>
            </fileset>
        </copy>

        <copy todir="${dist.dir}/webapp/WEB-INF/data">
            <fileset dir="webapp/WEB-INF/data">
                <include name=".DO_NOT_DELETE"/>
                <include name="README"/>
                <include name="RECOVERY"/>
            </fileset>
        </copy>

        <copy todir="${dist.dir}/webapp/WEB-INF/logs">
            <fileset dir="webapp/WEB-INF/logs">
                <include name=".DO_NOT_DELETE"/>
            </fileset>
        </copy>

        <copy todir="${dist.dir}/extensions">
            <fileset dir="extensions"/>
        </copy>

        <copy todir="${dist.dir}/samples">
            <fileset dir="samples"/>
        </copy>

        <copy file="${src}/org/exist/util/mime-types.xml" todir="${dist.dir}"/>

        <fixcrlf eol="crlf" includes="**/*.bat" srcdir="${dist.dir}/bin"/>
        <fixcrlf eol="crlf" includes="**/*.bat" srcdir="${dist.dir}/tools/yajsw/bin"/>
        <fixcrlf eol="lf" eof="remove" includes="**/*.sh" srcdir="${dist.dir}/bin"/>
        <fixcrlf eol="lf" eof="remove" includes="**/*.sh" srcdir="${dist.dir}/tools/yajsw/bin"/>
        <fixcrlf eol="crlf" includes="build.bat" srcdir="${dist.dir}"/>
        <fixcrlf eol="lf" eof="remove" includes="build.sh" srcdir="${dist.dir}"/>

        <chmod perm="+x">
            <fileset dir="${dist.dir}">
                <include name="**/*.sh"/>
                <include name="**/*.pl"/>
            </fileset>
        </chmod>
        <chmod perm="+x">
            <fileset dir="${dist.dir}/tools/yajsw/bin">
                <include name="*.sh"/>
            </fileset>
        </chmod>

    </target>
    
    <!-- ================================================================== -->
    <!-- Create zip                                                         -->
    <!-- ================================================================== -->
    <target name="dist-zip" depends="dist-dir" description="Create zip distribution">
        <property name="dist.name" value="${project.name}-${project.version}${build.label}"/>
        <zip destfile="${dist}/${dist.name}.zip" encoding="UTF-8" compress="true" level="9">
            <zipfileset dir="${dist.dir}" prefix="${dist.name}">
                <include name="**"/>
                <exclude name="*.sh"/>
                <exclude name="bin/*.sh"/>
                <exclude name="tools/yajsw/bin/*.sh"/>
            </zipfileset>
            <zipfileset dir="${dist.dir}" prefix="${dist.name}" filemode="755">
                <include name="*.sh"/>
            </zipfileset>
            <zipfileset dir="${dist.dir}/bin" prefix="${dist.name}/bin" filemode="755">
                <include name="*.sh"/>
            </zipfileset>
            <zipfileset dir="${dist.dir}/tools/yajsw/bin" prefix="${dist.name}/tools/yajsw/bin" filemode="755">
                <include name="*.sh"/>
            </zipfileset>
        </zip>
    </target>
    
    <!-- ================================================================== -->
    <!-- Create tar                                                         -->
    <!-- ================================================================== -->
    <target name="dist-tar" depends="dist-dir" description="Create tar distribution">
        <property name="dist.name" value="${project.name}-${project.version}${build.label}"/>
        <tar destfile="${dist}/${dist.name}.tar" longfile="gnu">
            <tarfileset dir="${dist.dir}" prefix="${dist.name}" preserveLeadingSlashes="false">
                <include name="**"/>
                <exclude name="*.sh"/>
                <exclude name="bin/*.sh"/>
                <exclude name="tools/yajsw/bin/*.sh"/>
            </tarfileset>
            <tarfileset dir="${dist.dir}" prefix="${dist.name}" preserveLeadingSlashes="false" filemode="755">
                <include name="*.sh"/>
            </tarfileset>
            <tarfileset dir="${dist.dir}/bin" prefix="${dist.name}/bin" preserveLeadingSlashes="false" filemode="755">
                <include name="*.sh"/>
            </tarfileset>
            <tarfileset dir="${dist.dir}/tools/yajsw/bin" prefix="${dist.name}/tools/yajsw/bin" preserveLeadingSlashes="false" filemode="755">
                <include name="*.sh"/>
            </tarfileset>
        </tar>
    </target>

    <!-- ================================================================== -->
    <!-- Create tar.gz                                                      -->
    <!-- ================================================================== -->
    <target name="dist-tgz" depends="dist-tar" description="Create tar.gz distribution">
        <property name="dist.name" value="${project.name}-${project.version}${build.label}"/>
        <gzip src="${dist}/${dist.name}.tar" zipfile="${dist}/${dist.name}.tar.gz"/>
    </target>

    <!-- ================================================================== -->
    <!-- Create tar.bz2                                                     -->
    <!-- ================================================================== -->
    <target name="dist-bz2" depends="dist-tar" description="Create tar.bz2 distribution">
        <property name="dist.name" value="${project.name}-${project.version}${build.label}"/>
        <bzip2 src="${dist}/${dist.name}.tar" zipfile="${dist}/${dist.name}.tar.bz2"/>
    </target>

</project>
