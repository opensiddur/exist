<?xml version="1.0" encoding="UTF-8"?>

<!-- ======================================================================= -->
<!-- eXist build file : Setup default xar packages                           -->
<!-- ======================================================================= -->

<!-- $Id$ -->

<project basedir="../.." name="Setup" default="setup">
  <description>Package setup tasks</description>

  <!-- import common targets -->
  <import file="../../build.xml"/>

  <!-- Additional task defs  -->
  <taskdef resource="net/sf/antcontrib/antcontrib.properties">
    <classpath>
      <pathelement location="tools/ant/lib/ant-contrib-1.0b3.jar"/>
    </classpath>
  </taskdef>

  <property file="build.properties"/>

  <property name="autostart-dir" value="autodeploy"/>

  <target name="prepare">
    <mkdir dir="${autostart-dir}"/>
    <!--  Automatically download standard xar packages from public repository
        if autostart directory is empty.
  -->
    <path id="autostart-files">
      <fileset dir="${autostart-dir}">
        <include name="*.xar"/>
      </fileset>
    </path>

    <property name="autostart-files" refid="autostart-files"/>

    <condition property="autostart-empty">
      <equals arg1="" arg2="${autostart-files}"/>
    </condition>
  </target>

  <!--
    Download xar files from the package website.
  -->
  <target name="setup" depends="prepare" description="Download standard xar packages.">
    <echo message="Downloading xar packages: ${autodeploy}..."/>
    <foreach list="${autodeploy}" target="download" param="xar"></foreach>
  </target>

  <target name="download">
    <pathconvert property="xar-installed" setonempty="false">
        <fileset dir="${autostart-dir}">
            <include name="${xar}-*.xar"/>
        </fileset>
    </pathconvert>
    <condition property="xar-found-status" value="Existing copy of ${xar} found at ${xar-installed}. Download will be skipped." else="No copy of ${xar} found in ${autostart-dir}. Download will be attempted.">
      <isset property="xar-installed"/>
    </condition>
    <echo message="${xar-found-status}"/>
    <antcall target="download-xar"/>
  </target>

  <target name="download-xar" unless="xar-installed">
    <!-- get dest="${autostart-dir}" src="${autodeploy.repo}/find?abbrev=${xar}&amp;processor=${project.version}"
         verbose="on" maxtime="180" usetimestamp="true" tryGzipEncoding="true"/ -->

    <taskdef name="fetch" classname="nl.ow.dilemma.ant.fetch.FetchTask">
      <classpath>
        <pathelement location="${asocat-exist.jar}"/>
      </classpath>
    </taskdef>
    <fetch dest="${autostart-dir}" url="${autodeploy.repo}/find?abbrev=${xar}&amp;processor=${project.version}&amp;zip=yes"
        failonerror="true" maxtime="180">
      <patternset>
        <include name="**/*.xar"/>
      </patternset>
    </fetch>
  </target>

</project>
